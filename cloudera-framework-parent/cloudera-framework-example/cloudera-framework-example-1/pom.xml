<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.cloudera.framework.parent</groupId>
    <artifactId>cloudera-framework-example-1</artifactId>
    <packaging>jar</packaging>
    <version>2.0.3-cdh5.15.1</version>

    <parent>
        <groupId>com.cloudera.framework</groupId>
        <artifactId>cloudera-framework-example</artifactId>
        <version>2.0.3-cdh5.15.1</version>
    </parent>

    <properties>
        <parcel.build.skip>${maven.package.skip}</parcel.build.skip>
        <tar.build.skip>${maven.package.skip}</tar.build.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.cloudera.framework.library.client</groupId>
            <artifactId>cloudera-framework-library-client-core</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework.library.client</groupId>
            <artifactId>cloudera-framework-library-client-zookeeper</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework.library.client</groupId>
            <artifactId>cloudera-framework-library-client-kafka</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework.library.client</groupId>
            <artifactId>cloudera-framework-library-client-flume</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework.library.thirdparty</groupId>
            <artifactId>cloudera-framework-library-thirdparty-hive</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework.library.thirdparty</groupId>
            <artifactId>cloudera-framework-library-thirdparty-avro</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework.library.thirdparty</groupId>
            <artifactId>cloudera-framework-library-thirdparty-parquet</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework.library.thirdparty</groupId>
            <artifactId>cloudera-framework-library-thirdparty-elephantbird</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework</groupId>
            <artifactId>cloudera-framework-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
        </dependency>
        <dependency>
            <groupId>com.cloudera.framework</groupId>
            <artifactId>cloudera-framework-testing</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <stringType>String</stringType>
                            <sourceDirectory>src/main/resources/avro/</sourceDirectory>
                            <outputDirectory>src/main/java/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
