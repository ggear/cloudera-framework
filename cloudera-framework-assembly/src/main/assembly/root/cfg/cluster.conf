name: graham-demo

provider {
  type: aws
  accessKeyId: ${?CLOUD_PROVIDER_ID}
  secretAccessKey: ${?CLOUD_PROVIDER_KEY}
  publishAccessKeys: false
  region: ap-southeast-2
  keyName: graham-director-kp
  subnetId: subnet-3c28077a
  securityGroupsIds: sg-2617ef42
  instanceNamePrefix: graham-demo
  rootVolumeSizeGB: 50
  associatePublicIpAddresses: true
}

ssh {
  username: ec2-user
  privateKey: /home/graham/.ssh/id_rsa
}

instances {
  master {
    type: m3.xlarge
    image: ami-f2663d91
    tags {
      owner: graham
    }
    bootstrapScript: """#!/bin/sh
      yum -y install nfs-utils
      systemctl enable rpcbind
      systemctl disable nfs-server
      systemctl start rpcbind
      systemctl stop nfs-server      
      sudo systemctl disable firewalld
      sudo systemctl stop firewalld
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Singapore /etc/localtime
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Australia/Sydney /etc/localtime
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Japan /etc/localtime
      sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/US/Pacific /etc/localtime
      exit 0
    """
  }
  slave {
    type: d2.xlarge
    image: ami-f2663d91
    tags {
      owner: graham
    }
    bootstrapScript: """#!/bin/sh
      yum -y install nfs-utils
      systemctl enable rpcbind
      systemctl disable nfs-server
      systemctl start rpcbind
      systemctl stop nfs-server      
      sudo systemctl disable firewalld
      sudo systemctl stop firewalld
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Singapore /etc/localtime
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Australia/Sydney /etc/localtime
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Japan /etc/localtime
      sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/US/Pacific /etc/localtime
      exit 0
    """
  }
  gateway {
    type: t2.small
    image: ami-f2663d91
    tags {
      owner: graham
    }
    bootstrapScript: """#!/bin/sh
      yum -y install nfs-utils
      systemctl enable rpcbind
      systemctl disable nfs-server
      systemctl start rpcbind
      systemctl stop nfs-server      
      sudo systemctl disable firewalld
      sudo systemctl stop firewalld
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Singapore /etc/localtime
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Australia/Sydney /etc/localtime
      #sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Japan /etc/localtime
      sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/US/Pacific /etc/localtime
      exit 0
    """
  }
}

cloudera-manager {
  instance: ${instances.master} {
    tags {
      group: manager
    }
  }
  enableEnterpriseTrial: true
  #  repository: "http://archive-primary.cloudera.com/cm5/redhat/7/x86_64/cm/5.8.1/"
  #  repositoryKeyUrl: "http://archive-primary.cloudera.com/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera"
  repository: "http://52.63.86.162/tmph3l7m2vv103/sbin/cm5/redhat/7/x86_64/cm/5.8.1/"
  repositoryKeyUrl: "http://52.63.86.162/tmph3l7m2vv103/sbin/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera"
  configs {
    CLOUDERA_MANAGER {
      "enable_api_debug": "true"
    }
    NAVIGATORMETASERVER {
      "navigator_safety_valve": "nav.extractor.poll_period=60\nnav.extractor.hive.max_wait=1\nnav.solr.commit_batch_duration_secs=-1\n"
    }
  }
}

cluster {
  products {
    CDH: 5.8.0
    KAFKA: 2.0.1
  }
  parcelRepositories: [
    #    "http://archive-primary.cloudera.com/cdh5/parcels/5.8.0/",
    #    "http://archive-primary.cloudera.com/cdh5/parcels/5.7.2/",
    #    "http://archive-primary.cloudera.com/kafka/parcels/2.0.1/"]
    "http://52.63.86.162/tmph3l7m2vv103/sbin/cdh5/parcels/5.8.0/",
    "http://52.63.86.162/tmph3l7m2vv103/sbin/cdh5/parcels/5.7.2/",
    "http://52.63.86.162/tmph3l7m2vv103/sbin/kafka/parcels/2.0.1/"]
  services: [HDFS, YARN, ZOOKEEPER, SENTRY, HBASE, SPARK, HIVE, IMPALA, OOZIE, SQOOP, FLUME, KAFKA, HUE]
  #  services: [HDFS, YARN, ZOOKEEPER, SENTRY, HBASE, KS_INDEXER, SPARK, SOLR, HIVE, IMPALA, OOZIE, SQOOP, FLUME, KAFKA, HUE]
  #hostname: "10.0.0.114"
  #username: "admin"
  #password: "admin"
  configs {
    SENTRY {
      "sentry_server_config_safety_valve": "<property><name>sentry.hive.testing.mode</name><value>true</value></property>"
    }
    HIVE {
      "hive_server2_sentry_safety_valve": "<property><name>sentry.hive.testing.mode</name><value>true</value></property>"
    }
    IMPALA {
      "impalad_sentry_safety_valve": "<property><name>sentry.hive.testing.mode</name><value>true</value></property>"
    }
    #    SOLR {
    #      "solr_sentry_safety_valve": "<property><name>sentry.hive.testing.mode</name><value>true</value></property>"
    #    }
    HUE {
      "hue_sentry_safety_valve": "<property><name>sentry.hive.testing.mode</name><value>true</value></property>"
    }
  }
  master-1 {
    count: 1
    minCount: 1
    #placementGroup: graham-demo    
    instance: ${instances.master} {
      tags {
        group: master
      }
    }
    roles {
      HDFS: [NAMENODE, SECONDARYNAMENODE]
      YARN: [RESOURCEMANAGER, JOBHISTORY]
      SENTRY: [SENTRY_SERVER]
      ZOOKEEPER: [SERVER]
      HBASE: [MASTER, HBASETHRIFTSERVER, HBASERESTSERVER]
      SPARK: [SPARK_MASTER]
      OOZIE: [OOZIE_SERVER]
      SQOOP: [SQOOP_SERVER]
      HIVE: [HIVESERVER2, HIVEMETASTORE, WEBHCAT]
      IMPALA: [CATALOGSERVER, STATESTORE]
      HUE: [HUE_SERVER]
    }
  }
  slaves {
    count: 3
    minCount: 3
    #placementGroup: graham-demo    
    instance: ${instances.slave} {
      tags {
        group: worker
      }
    }
    roles {
      HDFS: [DATANODE, HTTPFS, NFSGATEWAY, GATEWAY]
      ZOOKEEPER: [SERVER]
      YARN: [NODEMANAGER, GATEWAY]
      HBASE: [REGIONSERVER, GATEWAY]
      #      SOLR: [SOLR_SERVER, GATEWAY]
      #      KS_INDEXER: [HBASE_INDEXER]
      SPARK: [SPARK_WORKER]
      IMPALA: [IMPALAD]
      HIVE: [GATEWAY]
      KAFKA: [KAFKA_BROKER]
      FLUME: [AGENT]
    }
    configs {
      KAFKA {
        #        "num.partitions": "3"
        KAFKA_BROKER {
          "broker_max_heap_size": "512"
          "log.dirs": "/data0/kafka/data"
        }
      }
    }
  }
}
