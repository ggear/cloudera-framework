<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cloudera.framework</groupId>
	<artifactId>cloudera-framework-example</artifactId>
	<packaging>jar</packaging>
	<version>1.4.5-cdh5.8.0-SNAPSHOT</version>

	<parent>
		<groupId>com.cloudera</groupId>
		<artifactId>cloudera-framework</artifactId>
		<version>1.4.5-cdh5.8.0-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.cloudera.framework.library.client</groupId>
			<artifactId>cloudera-framework-library-client-core</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.library.client</groupId>
			<artifactId>cloudera-framework-library-client-zookeeper</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.library.client</groupId>
			<artifactId>cloudera-framework-library-client-kafka</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.library.client</groupId>
			<artifactId>cloudera-framework-library-client-flume</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework</groupId>
			<artifactId>cloudera-framework-assembly</artifactId>
			<version>${project.parent.version}</version>
			<type>tar.gz</type>
			<classifier>assembly</classifier>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.library.thirdparty</groupId>
			<artifactId>cloudera-framework-library-thirdparty-hive</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.library.thirdparty</groupId>
			<artifactId>cloudera-framework-library-thirdparty-avro</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.library.thirdparty</groupId>
			<artifactId>cloudera-framework-library-thirdparty-parquet</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.library.thirdparty</groupId>
			<artifactId>cloudera-framework-library-thirdparty-elephantbird</artifactId>
			<version>${project.parent.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework</groupId>
			<artifactId>cloudera-framework-common</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework</groupId>
			<artifactId>cloudera-framework-testing</artifactId>
			<version>${project.parent.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								import org.apache.commons.lang.StringUtils
								project.properties["parcel.name"] = \
								StringUtils.upperCase(project.artifactId).replaceAll('-','_') \
								+ "-" + project.version
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<stringType>String</stringType>
							<sourceDirectory>src/main/resources/avro/</sourceDirectory>
							<outputDirectory>src/main/java/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.cloudera.parcel</groupId>
				<artifactId>cloudera-parcel-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare</id>
						<phase>process-sources</phase>
						<goals>
							<goal>prepare</goal>
						</goals>
						<configuration>
							<parcels>
								<parcel>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>el7</classifier>
								</parcel>
							</parcels>
						</configuration>
					</execution>
					<execution>
						<id>package</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<parcels>
								<parcel>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>el7</classifier>
									<distributionRepositoryUrl>scp://graham:/Users/graham/.ssh/id_rsa.pem@52.63.86.162:22/var/www/html/tmph3l7m2vv103/apps/${project.artifactId}/parcels</distributionRepositoryUrl>
								</parcel>
							</parcels>
						</configuration>
					</execution>
					<execution>
						<id>deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
						<configuration>
							<parcels>
								<parcel>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>el7</classifier>
									<distributionRepositoryUrl>scp://graham:/Users/graham/.ssh/id_rsa.pem@52.63.86.162:22/var/www/html/tmph3l7m2vv103/apps/${project.artifactId}/parcels</distributionRepositoryUrl>
								</parcel>
							</parcels>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>package-tar</id>
						<phase>verify</phase>
						<goals>
							<goal>attached</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/assembly.xml</descriptor>
							</descriptors>
							<tarLongFileMode>gnu</tarLongFileMode>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>parcel-dependency</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/parcel/${parcel.name}/lib/jar</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>parcel-dependencies</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeTypes>pom</excludeTypes>
							<includeScope>runtime</includeScope>
							<excludeTransitive>false</excludeTransitive>
							<outputDirectory>${project.build.directory}/parcel/${parcel.name}/lib/jar</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>parcel-dependency-flume</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/parcel/${parcel.name}/lib/flume/${project.artifactId}/lib</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>parcel-dependencies-flume</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeTypes>pom</excludeTypes>
							<includeScope>runtime</includeScope>
							<excludeTransitive>false</excludeTransitive>
							<outputDirectory>${project.build.directory}/parcel/${parcel.name}/lib/flume/${project.artifactId}/libext</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>parcel-assembly</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.cloudera.framework</groupId>
									<artifactId>cloudera-framework-assembly</artifactId>
									<version>${project.parent.version}</version>
									<type>tar.gz</type>
									<classifier>assembly</classifier>
									<outputDirectory>${project.build.directory}/parcel/${parcel.name}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>unpack-assembly</id>
						<phase>install</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>assembly</classifier>
									<type>tar.gz</type>
									<outputDirectory>${project.build.directory}/assembly</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
